#+TITLE: Apache Kafka v0.8 Wire Protocol
#+KEYWORDS: apache, kafka, protocol
#+DESCRIPTION: Documenting the Apache Kafka version 0.8 Wire Protocol
#+AUTHOR: David Reynolds
#+EMAIL: david@alwaysmovefast.com
#+OPTIONS: creator:nil author:nil num:nil toc:1 ^:nil timestamp:nil
#+STYLE: <style type="text/css">
#+STYLE: html {font: 14px Arial, Helvetica, Verdana, sans-serif;}
#+STYLE: body {width: 700px; background-color: #eee;}
#+STYLE: #content {padding: 10px; border: 1px solid #ccd; background-color: #fcfcfc;}
#+STYLE: div.article-body {background-color: #efefef; border: 1px solid #aab; padding: 0px 10px; margin: 0;}
#+STYLE: a {text-decoration: none;}
#+STYLE: </style>

by David Reynolds on September 3, 2013

This is a work in progress. The [[https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol][Kafka v0.8 Protocol Documentation]] is a good
place to start. For my work on libkafka I need more in-depth docs that have
actual packet formats and examples. This is my attempt at documenting what I
find.

* Protocol Primitive Types

[[https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol#AGuideToTheKafkaProtocol-ProtocolPrimitiveTypes][Kafka Protocol Primitive Types]]

* Request/Response Prefix

Each request and response is prefixed by the size of the request, not counting this field.

#+BEGIN_SRC c
SIZE int32

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             SIZE                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Request Header Format

#+BEGIN_SRC c
API KEY        int16
API VERSION    int16
CORRELATION ID int32
CLIENT ID      string

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            API KEY            |          API VERSION          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        CORRELATION ID                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       CLIENT ID LENGTH        |           CLIENT ID           /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                       CLIENT ID (cont'd)                      /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Response Header Format

#+BEGIN_SRC c
CORRELATION ID int32

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        CORRELATION ID                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Metadata Request Format

Metadata requests are used to determine which topics and partitions each
broker is responsible for. It can be sent to any broker in the cluster. A client
may want metadata for a subset of topics or for every topic.

#+BEGIN_SRC c
NUM TOPICS     int32
LIST OF TOPICS [string]

A metadata request with two topics would look like this:

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           NUM TOPICS                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         TOPIC LENGTH          |             TOPIC             /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                        TOPIC (cont'd)                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         TOPIC LENGTH          |             TOPIC             /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                        TOPIC (cont'd)                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Metadata Request Example - All Topics

#+BEGIN_SRC c
size: 22 (0x00 0x00 0x00 0x16)
#+END_SRC

** Request Header

#+BEGIN_SRC c
api key:        3 (0x00 0x03)
api version:    0 (0x00 0x00)
correlation id: 1 (0x00 0x00 0x00 0x01)
client id:      "libkafka" (0x00 0x08 0x6C 0x69 0x62 0x6B 0x61 0x66 0x6B 0x61)
#+END_SRC

** Metadata Request

#+BEGIN_SRC c
num topics: 0 (0x00 0x00 0x00 0x00)
#+END_SRC

** Hex Dump

#+BEGIN_SRC c
0x00 0x00 0x00 0x16
0x00 0x03 0x00 0x00 0x00 0x00 0x00 0x01
0x00 0x08 0x6C 0x69 0x62 0x6B 0x61 0x66 0x6B 0x61
0x00 0x00 0x00 0x00
#+END_SRC

* Metadata Request Example - Two Topics

#+BEGIN_SRC c
size: 36 (0x00 0x00 0x00 0x24)
#+END_SRC

** Request Header

#+BEGIN_SRC c
api key:        3 (0x00 0x03)
api version:    0 (0x00 0x00)
correlation id: 1 (0x00 0x00 0x00 0x01)
client id:      "libkafka" (0x00 0x08 0x6C 0x69 0x62 0x6B 0x61 0x66 0x6B 0x61)
#+END_SRC

** Metadata Request

#+BEGIN_SRC c
num topics: 2 (0x00 0x00 0x00 0x02)
#+END_SRC

*** Topics

#+BEGIN_SRC c
"test":   0x00 0x04 0x74 0x65 0x73 0x74
"foobar": 0x00 0x06 0x66 0x6F 0x6F 0x62 0x61 0x72
#+END_SRC

** Hex Dump

#+BEGIN_SRC c
0x00 0x00 0x00 0x24
0x00 0x03 0x00 0x00 0x00 0x00 0x00 0x01
0x00 0x08 0x6C 0x69 0x62 0x6B 0x61 0x66 0x6B 0x61
0x00 0x00 0x00 0x02
0x00 0x04 0x74 0x65 0x73 0x74
0x00 0x06 0x66 0x6F 0x6F 0x62 0x61 0x72
#+END_SRC

* Metadata Response Format

These packets are heavily nested. Below is just a simple representation.

#+BEGIN_SRC c
NUM BROKERS int32
LIST OF BROKERS [ID, HOST, PORT]
    ID   int32
    HOST string
    PORT int32
NUM TOPICS int32
LIST OF TOPICS [ERROR CODE, TOPIC, PARTITIONS]
    ERROR CODE     int16
    TOPIC          string
    NUM PARTITIONS int32
    LIST OF PARTITIONS [ERROR CODE, PARTITION ID, LEADER ID, REPLICAS, ISRs]
        ERROR CODE       int16
        PARTITION ID     int32
        LEADER ID        int32
        NUM REPLICAS     int32
        LIST OF REPLICAS [int32]
        NUM ISRs         int32
        LIST OF ISRs     [int32]

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             SIZE                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         CORRELATION ID                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          NUM BROKERS                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           BROKER ID                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           HOST LENGTH         |             HOST              /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             PORT                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           NUM TOPICS                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           ERROR CODE          |          TOPIC LENGTH         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                                                               /
/                             TOPIC                             /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        NUM PARTITIONS                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           ERROR CODE          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         PARTITION ID                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           LEADER ID                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         NUM REPLICAS                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          REPLICA ID                           |
/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/
|                           NUM ISR                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           ISR ID                              |
/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/
#+END_SRC

* Metadata Response Example

#+BEGIN_SRC c
size:           286 (0x00 0x00 0x01 0x1E)
correlation id:   1 (0x00 0x00 0x00 0x01)
num brokers:      3 (0x00 0x00 0x00 0x03)

Brokers:

    id:          3 (0x00 0x00 0x00 0x03)
    host: "ubuntu" (0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75)
    port:     9094 (0x00 0x00 0x23 0x86)

    id:          1 (0x00 0x00 0x00 0x01)
    host: "ubuntu" (0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75)
    port:     9092 (0x00 0x00 0x23 0x84)

    id:          2 (0x00 0x00 0x00 0x02)
    host: "ubuntu" (0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75)
    port:     9093 (0x00 0x00 0x23 0x85)

num topics        2 (0x00 0x00 0x00 0x02)

Topics:

    Topic #1: "foobar"

    error code:       0 (0x00 0x00)
    topic:     "foobar" (0x00 0x06 0x66 0x6F 0x6F 0x62 0x61 0x72)
    num partitions:   3 (0x00 0x00 0x00 0x03)

    Partitions:

        error code:    0 (0x00 0x00)
        partition id:  0 (0x00 0x00 0x00 0x00)
        leader id:     1 (0x00 0x00 0x00 0x01)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [3, 1] (0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x01)
        num isr:       1 (0x00 0x00 0x00 0x01)
        isr:         [1] (0x00 0x00 0x00 0x01)

        error code:    0 (0x00 0x00)
        partition id:  1 (0x00 0x00 0x00 0x01)
        leader id:     1 (0x00 0x00 0x00 0x01)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [1, 2] (0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02)
        num isr:       2 (0x00 0x00 0x00 0x02)
        isr:      [1, 2] (0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02)

        error code:    0 (0x00 0x00)
        partition id:  2 (0x00 0x00 0x00 0x02)
        leader id:     3 (0x00 0x00 0x00 0x03)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [2, 3] (0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x03)
        num isr:       2 (0x00 0x00 0x00 0x02)
        isr:      [3, 2] (0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02)

    Topic #2: "test"

    error code:     0 (0x00 0x00)
    topic:     "test" (0x00 0x04 0x74 0x65 0x73 0x74)
    num partitions: 3 (0x00 0x00 0x00 0x03)

    Partitions:

        error code:    0 (0x00 0x00)
        partition id:  0 (0x00 0x00 0x00 0x00)
        leader id:     3 (0x00 0x00 0x00 0x03)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [3, 2] (0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02)
        num isr:       2 (0x00 0x00 0x00 0x02)
        isr:      [3, 2] (0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02)

        error code:    0 (0x00 0x00)
        partition id:  1 (0x00 0x00 0x00 0x01)
        leader id:     1 (0x00 0x00 0x00 0x01)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [1, 3] (0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x03)
        num isr:       2 (0x00 0x00 0x00 0x02)
        isr:      [1, 3] (0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x03)

        error code:    0 (0x00 0x00)
        partition id:  2 (0x00 0x00 0x00 0x02)
        leader id:     1 (0x00 0x00 0x00 0x01)
        num replicas:  2 (0x00 0x00 0x00 0x02)
        replicas: [2, 1] (0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x01)
        num isr:       2 (0x00 0x00 0x00 0x02)
        isr:      [1, 2] (0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02)

#+END_SRC

** Hex Dump

#+BEGIN_SRC c
0x00 0x00 0x01 0x1e

Brokers:
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x03

0x00 0x00 0x00 0x03 0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75 0x00 0x00 0x23 0x86
0x00 0x00 0x00 0x01 0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75 0x00 0x00 0x23 0x84
0x00 0x00 0x00 0x02 0x00 0x06 0x75 0x62 0x75 0x6E 0x74 0x75 0x00 0x00 0x23 0x85

Topics:
0x00 0x00 0x00 0x02

Topic #1 ("foobar"):
0x00 0x00 0x00 0x06 0x66 0x6F 0x6F 0x62 0x61 0x72

Topic Partitions:
0x00 0x00 0x00 0x03

0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x01

0x00 0x00 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02

0x00 0x00 0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x03
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x03
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02

Topic #2 ("test")
0x00 0x00 0x00 0x04 0x74 0x65 0x73 0x74

Topic Partitions:
0x00 0x00 0x00 0x03

0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x03
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x03 0x00 0x00 0x00 0x02

0x00 0x00 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x03
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x03

0x00 0x00 0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x01
0x00 0x00 0x00 0x02
0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x02
#+END_SRC

* Produce Request Format

This structure lets you nest messages according to topics and partitions.
Since a producer might have messages attached to it that need to be sent to
multiple brokers, I think they are nested/grouped by broker. So you have
something like:

broker 0
- topic "foo"
  - partition 0
    - message 1
    - message 2
  - partition 1
    - message 3
- topic "bar"
  - partition 0
    - message 4
    - message 5
broker 1
- topic "test"
  - partition 1
    - message 6
    - message 7

#+BEGIN_SRC c
REQUIRED ACKS    int16
TIMEOUT          int32
NUM TOPICS       int32
TOPIC            string
NUM PARTITIONS   int32
PARTITION        int32
MESSAGE SET SIZE int32
MESSAGE SET      A Message Set is a sequence of Messages.

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         REQUIRED ACKS         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                            TIMEOUT                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           NUM TOPICS                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         TOPIC LENGTH          |             TOPIC             /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                        TOPIC (cont'd)                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        NUM PARTITIONS                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           PARTITION                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       MESSAGE SET SIZE                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                                                               /
/                          MESSAGE SET                          /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Message Format

#+BEGIN_SRC c
OFFSET       int64
MESSAGE SIZE int32
CRC          int32
MAGIC        int8
ATTRIBUTES   int8
KEY          byte string
VALUE        byte string

Keys are optional. A key length of -1 indicates a NULL key.

 0             1               2               3               4
 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                       OFFSET (8 bytes)                        |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         MESSAGE SIZE                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                              CRC                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     MAGIC     |  ATTRIBUTES   |          KEY LENGTH           /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/      KEY LENGTH (cont'd)      |              KEY              /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               /
/                         KEY (cont'd)                          /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         VALUE LENGTH                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                                                               /
/                             VALUE                             /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#+END_SRC

* Produce Request Example

#+BEGIN_SRC c
size: 78 (0x00 0x00 0x00 0x4E)
#+END_SRC

** Request Header

#+BEGIN_SRC c
api key:        0     (0x00 0x00)
api version:    0     (0x00 0x00)
correlation id: 1     (0x00 0x00 0x00 0x01)
client id:      "foo" (0x00 0x03 0x66 0x6F 0x6F)
#+END_SRC

** Produce Request

#+BEGIN_SRC c
required acks:    1      (0x00 0x01)
timeout:          1500   (0x00 0x00 0x05 0xDC)
num topics:       1      (0x00 0x00 0x00 0x01)
topic:            "test" (0x00 0x04 0x74 0x65 0x73 0x74)
num partitions:   1      (0x00 0x00 0x00 0x01)
partition:        0      (0x00 0x00 0x00 0x00)
message set size: 37     (0x00 0x00 0x00 0x25)
#+END_SRC

** Message Set

*** Message #1

#+BEGIN_SRC c
offset:     0  (0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00)
size:       25 (0x00 0x00 0x00 0x19)
crc:        0x73 0xAC 0xF7 0x7C
magic:      0 (0x00)
attributes: 0 (0x00)
key:        NULL (0xFF 0xFF 0xFF 0xFF)
value:      "hello world" (0x00 0x00 0x00 0x0B 0x68 0x65 0x6C 0x6C 0x6F 0x20 0x77 0x6F 0x72 0x6C 0x64)
#+END_SRC

** Hex Dump

#+BEGIN_SRC c
0x00 0x00 0x00 0x4E 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01
0x00 0x03 0x66 0x6F 0x6F 0x00 0x01 0x00 0x00 0x05 0xDC 0x00
0x00 0x00 0x01 0x00 0x04 0x74 0x65 0x73 0x74 0x00 0x00 0x00
0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x25 0x00 0x00 0x00
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x19 0x73 0xAC 0xF7
0x7C 0x00 0x00 0xFF 0xFF 0xFF 0xFF 0x00 0x00 0x00 0x0B 0x68
0x65 0x6C 0x6C 0x6F 0x20 0x77 0x6F 0x72 0x6C 0x64
#+END_SRC
